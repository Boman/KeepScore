com.nolanlawson.keepscore.AboutActivity -> com.nolanlawson.keepscore.AboutActivity:
    com.nolanlawson.keepscore.util.UtilLogger log -> a
    android.widget.Button okButton -> b
    android.webkit.WebView aboutWebView -> c
    android.widget.ProgressBar progressBar -> d
    android.os.Handler handler -> e
    android.view.View topPanel -> f
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String loadTextFile(int) -> a
    void onClick(android.view.View) -> onClick
    java.lang.String getVersionName() -> a
    android.os.Handler access$1(com.nolanlawson.keepscore.AboutActivity) -> a
    void access$2(com.nolanlawson.keepscore.AboutActivity,java.lang.String) -> a
    android.widget.ProgressBar access$3(com.nolanlawson.keepscore.AboutActivity) -> b
    android.webkit.WebView access$4(com.nolanlawson.keepscore.AboutActivity) -> c
    android.view.View access$5(com.nolanlawson.keepscore.AboutActivity) -> d
    android.widget.Button access$6(com.nolanlawson.keepscore.AboutActivity) -> e
com.nolanlawson.keepscore.AboutActivity$AboutWebClient -> com.nolanlawson.keepscore.u:
    com.nolanlawson.keepscore.AboutActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.nolanlawson.keepscore.AboutActivity$AboutWebClient$1 -> com.nolanlawson.keepscore.o:
    com.nolanlawson.keepscore.AboutActivity$AboutWebClient this$1 -> a
    java.lang.String val$url -> b
    void run() -> run
com.nolanlawson.keepscore.AboutActivity$AboutWebClient$2 -> com.nolanlawson.keepscore.n:
    com.nolanlawson.keepscore.AboutActivity$AboutWebClient this$1 -> a
    void run() -> run
com.nolanlawson.keepscore.GameActivity -> com.nolanlawson.keepscore.GameActivity:
    com.nolanlawson.keepscore.util.UtilLogger log -> a
    android.view.View rootLayout -> b
    com.nolanlawson.keepscore.db.Game game -> c
    java.util.List playerScores -> d
    android.os.PowerManager$WakeLock wakeLock -> e
    java.util.List playerViews -> f
    android.os.Handler handler -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void startNewGameWithSameSettings() -> a
    void saveGame(com.nolanlawson.keepscore.db.Game,boolean,java.lang.Runnable) -> a
    void setUpWidgets() -> b
    void access$0(com.nolanlawson.keepscore.GameActivity,java.lang.CharSequence) -> a
    com.nolanlawson.keepscore.db.Game access$2(com.nolanlawson.keepscore.GameActivity) -> a
    java.util.List access$3(com.nolanlawson.keepscore.GameActivity) -> b
com.nolanlawson.keepscore.GameActivity$1 -> com.nolanlawson.keepscore.q:
    com.nolanlawson.keepscore.GameActivity this$0 -> a
    android.widget.EditText val$editText -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.GameActivity$2 -> com.nolanlawson.keepscore.p:
    com.nolanlawson.keepscore.GameActivity this$0 -> a
    void run() -> run
com.nolanlawson.keepscore.GameActivity$3 -> com.nolanlawson.keepscore.m:
    com.nolanlawson.keepscore.GameActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.GameActivity$4 -> com.nolanlawson.keepscore.l:
    com.nolanlawson.keepscore.GameActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.GameActivity$5 -> com.nolanlawson.keepscore.k:
    com.nolanlawson.keepscore.GameActivity this$0 -> a
    com.nolanlawson.keepscore.db.Game val$gameToSave -> b
    boolean val$autosaved -> c
    java.lang.Runnable val$onFinished -> d
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nolanlawson.keepscore.HistoryActivity -> com.nolanlawson.keepscore.HistoryActivity:
    com.nolanlawson.keepscore.util.UtilLogger log -> a
    android.widget.RadioGroup radioGroup -> b
    android.widget.ToggleButton byRoundButton -> c
    android.widget.ToggleButton byPlayerButton -> d
    android.widget.ScrollView byRoundScrollView -> e
    android.widget.ScrollView byPlayerScrollView -> f
    android.widget.TableLayout byRoundTableLayout -> g
    android.widget.TableLayout byPlayerTableLayout -> h
    android.view.LayoutInflater inflater -> i
    com.nolanlawson.keepscore.db.Game game -> j
    void onCreate(android.os.Bundle) -> onCreate
    void createByRoundTableLayout() -> a
    java.util.List getCollatedHistoryItems() -> b
    boolean allIteratorsAreEmpty(java.util.List) -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void onClick(android.view.View) -> onClick
    android.view.View createDividerView(android.view.ViewGroup) -> a
    android.view.View createListHeader(android.view.ViewGroup,java.lang.CharSequence) -> a
    android.view.View createHistoryItemView(com.nolanlawson.keepscore.data.HistoryItem,int,int) -> a
    void setDummyTextView(android.widget.TextView) -> a
com.nolanlawson.keepscore.LoadGameActivity -> com.nolanlawson.keepscore.LoadGameActivity:
    com.nolanlawson.keepscore.util.UtilLogger log -> a
    com.nolanlawson.keepscore.data.SavedGameAdapter adapter -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    java.util.List getAllGames() -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void showHistory(com.nolanlawson.keepscore.db.Game) -> a
    void access$0(com.nolanlawson.keepscore.LoadGameActivity,com.nolanlawson.keepscore.db.Game) -> a
    void access$1(com.nolanlawson.keepscore.LoadGameActivity,com.nolanlawson.keepscore.db.Game) -> b
    com.nolanlawson.keepscore.data.SavedGameAdapter access$2(com.nolanlawson.keepscore.LoadGameActivity) -> a
    void access$3(com.nolanlawson.keepscore.LoadGameActivity,com.nolanlawson.keepscore.db.Game) -> c
com.nolanlawson.keepscore.LoadGameActivity$1 -> com.nolanlawson.keepscore.e:
    com.nolanlawson.keepscore.LoadGameActivity this$0 -> a
    com.nolanlawson.keepscore.db.Game val$game -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.LoadGameActivity$2 -> com.nolanlawson.keepscore.d:
    com.nolanlawson.keepscore.LoadGameActivity this$0 -> a
    android.widget.EditText val$editText -> b
    com.nolanlawson.keepscore.db.Game val$game -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.LoadGameActivity$2$1 -> com.nolanlawson.keepscore.t:
    com.nolanlawson.keepscore.LoadGameActivity$2 this$1 -> a
    com.nolanlawson.keepscore.db.Game val$game -> b
    java.lang.String val$newName -> c
    android.content.DialogInterface val$dialog -> d
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nolanlawson.keepscore.LoadGameActivity$3 -> com.nolanlawson.keepscore.c:
    com.nolanlawson.keepscore.LoadGameActivity this$0 -> a
    com.nolanlawson.keepscore.db.Game val$game -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.LoadGameActivity$4 -> com.nolanlawson.keepscore.b:
    com.nolanlawson.keepscore.LoadGameActivity this$0 -> a
    com.nolanlawson.keepscore.db.Game val$game -> b
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nolanlawson.keepscore.MainActivity -> com.nolanlawson.keepscore.MainActivity:
    android.widget.Button newGameButton -> a
    android.widget.Button resumeGameButton -> b
    android.widget.Button loadGameButton -> c
    com.nolanlawson.keepscore.db.Game mostRecentGame -> d
    android.os.Handler handler -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onClick(android.view.View) -> onClick
    com.nolanlawson.keepscore.db.Game access$0(com.nolanlawson.keepscore.MainActivity) -> a
com.nolanlawson.keepscore.MainActivity$1 -> com.nolanlawson.keepscore.g:
    com.nolanlawson.keepscore.MainActivity this$0 -> a
    void run() -> run
com.nolanlawson.keepscore.NamePlayersActivity -> com.nolanlawson.keepscore.NamePlayersActivity:
    java.util.List playerEditTexts -> a
    android.widget.Button okButton -> b
    int numPlayers -> c
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getPlayerNameSuggestions() -> a
    void onClick(android.view.View) -> onClick
    java.util.List access$0(com.nolanlawson.keepscore.NamePlayersActivity) -> a
    java.util.List access$1(com.nolanlawson.keepscore.NamePlayersActivity) -> b
com.nolanlawson.keepscore.NamePlayersActivity$1 -> com.nolanlawson.keepscore.a:
    com.nolanlawson.keepscore.NamePlayersActivity this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nolanlawson.keepscore.NewGameActivity -> com.nolanlawson.keepscore.NewGameActivity:
    java.util.List numPlayersButtons -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.nolanlawson.keepscore.SettingsActivity -> com.nolanlawson.keepscore.SettingsActivity:
    android.preference.EditTextPreference button1Pref -> a
    android.preference.EditTextPreference button2Pref -> b
    android.preference.EditTextPreference button3Pref -> c
    android.preference.EditTextPreference button4Pref -> d
    android.preference.EditTextPreference twoPlayerButton1Pref -> e
    android.preference.EditTextPreference twoPlayerButton2Pref -> f
    android.preference.EditTextPreference twoPlayerButton3Pref -> g
    android.preference.EditTextPreference twoPlayerButton4Pref -> h
    android.preference.EditTextPreference updateDelayPref -> i
    android.preference.EditTextPreference initialScorePref -> j
    android.preference.CheckBoxPreference useWakeLockPref -> k
    android.preference.Preference resetPref -> l
    android.preference.ListPreference colorSchemePref -> m
    void onCreate(android.os.Bundle) -> onCreate
    android.preference.Preference findPreferenceById(int) -> a
    void access$0(com.nolanlawson.keepscore.SettingsActivity) -> a
com.nolanlawson.keepscore.SettingsActivity$1 -> com.nolanlawson.keepscore.s:
    com.nolanlawson.keepscore.SettingsActivity this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.nolanlawson.keepscore.SettingsActivity$2 -> com.nolanlawson.keepscore.r:
    com.nolanlawson.keepscore.SettingsActivity this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.nolanlawson.keepscore.SettingsActivity$3 -> com.nolanlawson.keepscore.j:
    com.nolanlawson.keepscore.SettingsActivity this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.nolanlawson.keepscore.SettingsActivity$3$1 -> com.nolanlawson.keepscore.f:
    com.nolanlawson.keepscore.SettingsActivity$3 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.SettingsActivity$4 -> com.nolanlawson.keepscore.i:
    com.nolanlawson.keepscore.SettingsActivity this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.nolanlawson.keepscore.SettingsActivity$5 -> com.nolanlawson.keepscore.h:
    com.nolanlawson.keepscore.SettingsActivity this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.nolanlawson.keepscore.data.HistoryItem -> com.nolanlawson.keepscore.b.b:
    int delta -> a
    long runningTotal -> b
    boolean hideDelta -> c
    boolean isHideDelta() -> a
    int getDelta() -> b
    long getRunningTotal() -> c
    java.util.List createFromPlayerScore$193cd4f4(com.nolanlawson.keepscore.db.PlayerScore) -> a
com.nolanlawson.keepscore.data.SavedGameAdapter -> com.nolanlawson.keepscore.b.d:
    com.nolanlawson.keepscore.util.UtilLogger log -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nolanlawson.keepscore.data.SavedGameAdapter$1 -> com.nolanlawson.keepscore.b.a:
    com.nolanlawson.keepscore.data.SavedGameAdapter this$0 -> a
    android.content.Context val$context -> b
    java.lang.Object apply(java.lang.Object) -> a
com.nolanlawson.keepscore.data.SavedGameAdapter$ViewWrapper -> com.nolanlawson.keepscore.b.c:
    android.view.View view -> a
    android.widget.TextView nameTextView -> b
    android.widget.TextView numPlayersTextView -> c
    android.widget.TextView playersTextView -> d
    android.widget.TextView startedTextView -> e
    android.widget.TextView savedTextView -> f
    android.widget.TextView getNameTextView() -> a
    android.widget.TextView getNumPlayersTextView() -> b
    android.widget.TextView getPlayersTextView() -> c
    android.widget.TextView getStartedTextView() -> d
    android.widget.TextView getSavedTextView() -> e
com.nolanlawson.keepscore.db.Game -> com.nolanlawson.keepscore.db.Game:
    int id -> a
    long dateStarted -> b
    long dateSaved -> c
    java.lang.String name -> d
    boolean autosaved -> e
    java.util.List playerScores -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isAutosaved() -> a
    void setAutosaved(boolean) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    int getId() -> c
    void setId(int) -> a
    long getDateStarted() -> d
    void setDateStarted(long) -> a
    long getDateSaved() -> e
    void setDateSaved(long) -> b
    java.util.List getPlayerScores() -> f
    void setPlayerScores(java.util.List) -> a
    java.lang.String toString() -> toString
    java.util.Comparator byRecentlySaved() -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
com.nolanlawson.keepscore.db.Game$1 -> com.nolanlawson.keepscore.db.e:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.nolanlawson.keepscore.db.Game$2 -> com.nolanlawson.keepscore.db.d:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nolanlawson.keepscore.db.Game$3 -> com.nolanlawson.keepscore.db.c:
    com.nolanlawson.keepscore.db.Game this$0 -> a
    java.lang.Object apply(java.lang.Object) -> a
com.nolanlawson.keepscore.db.GameDBHelper -> com.nolanlawson.keepscore.db.f:
    com.nolanlawson.keepscore.util.UtilLogger log -> a
    java.lang.String[] JOINED_COLUMNS -> b
    android.database.sqlite.SQLiteDatabase db -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    com.nolanlawson.keepscore.db.Game findGameById(int) -> a
    com.nolanlawson.keepscore.db.Game findMostRecentGame() -> a
    boolean saveGame(com.nolanlawson.keepscore.db.Game,boolean) -> a
    void savePlayerScores(int,java.util.List) -> a
    java.util.List findAllGames() -> b
    void deleteGame(com.nolanlawson.keepscore.db.Game) -> a
    void updateGameName(com.nolanlawson.keepscore.db.Game,java.lang.String) -> a
    java.util.List findDistinctPlayerNames() -> c
    java.util.List convertToGames(android.database.Cursor) -> a
com.nolanlawson.keepscore.db.PlayerScore -> com.nolanlawson.keepscore.db.PlayerScore:
    int id -> a
    java.lang.String name -> b
    long score -> c
    int playerNumber -> d
    java.util.List history -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> a
    void setId(int) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    long getScore() -> c
    void setScore(long) -> a
    int getPlayerNumber() -> d
    void setPlayerNumber(int) -> b
    java.util.List getHistory() -> e
    void setHistory(java.util.List) -> a
    java.lang.String toString() -> toString
    java.util.Comparator sortByPlayerNumber() -> f
    boolean isAtDefault(android.content.Context) -> a
    java.lang.String toDisplayName(android.content.Context) -> b
    java.lang.Object clone() -> clone
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.nolanlawson.keepscore.db.PlayerScore$1 -> com.nolanlawson.keepscore.db.a:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.nolanlawson.keepscore.db.PlayerScore$2 -> com.nolanlawson.keepscore.db.b:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nolanlawson.keepscore.helper.ColorScheme -> com.nolanlawson.keepscore.a.a:
    com.nolanlawson.keepscore.helper.ColorScheme Light -> a
    com.nolanlawson.keepscore.helper.ColorScheme Dark -> b
    com.nolanlawson.keepscore.helper.ColorScheme Android -> c
    int backgroundColorResId -> d
    int foregroundColorResId -> e
    int positiveColorResId -> f
    int negativeColorResId -> g
    int buttonBackgroundDrawableResId -> h
    int dividerColorResId -> i
    com.nolanlawson.keepscore.helper.ColorScheme[] ENUM$VALUES -> j
    int getBackgroundColorResId() -> a
    int getForegroundColorResId() -> b
    int getPositiveColorResId() -> c
    int getNegativeColorResId() -> d
    int getButtonBackgroundDrawableResId() -> e
    int getDividerColorResId() -> f
    com.nolanlawson.keepscore.helper.ColorScheme findByPreference(java.lang.String,android.content.Context) -> a
    com.nolanlawson.keepscore.helper.ColorScheme[] values() -> values
    com.nolanlawson.keepscore.helper.ColorScheme valueOf(java.lang.String) -> valueOf
com.nolanlawson.keepscore.helper.CompatibilityHelper -> com.nolanlawson.keepscore.a.f:
    com.nolanlawson.keepscore.util.UtilLogger log -> a
    java.lang.reflect.Method overridePendingTransitionMethod -> b
    boolean alreadyChecked -> c
    void overridePendingTransition$602ee859(android.app.Activity) -> a
com.nolanlawson.keepscore.helper.DialogHelper -> com.nolanlawson.keepscore.a.c:
    void showAdditionalDeltasDialog(boolean,com.nolanlawson.keepscore.helper.DialogHelper$ResultListener,android.content.Context) -> a
    android.view.View$OnClickListener incrementingOnClickListener(android.widget.EditText,int) -> a
com.nolanlawson.keepscore.helper.DialogHelper$1 -> com.nolanlawson.keepscore.a.g:
    com.nolanlawson.keepscore.helper.DialogHelper$ResultListener val$resultListener -> a
    android.widget.EditText val$editText -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.helper.DialogHelper$2 -> com.nolanlawson.keepscore.a.h:
    android.content.Context val$context -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.helper.DialogHelper$3 -> com.nolanlawson.keepscore.a.i:
    android.widget.EditText val$editText -> a
    int val$delta -> b
    void onClick(android.view.View) -> onClick
com.nolanlawson.keepscore.helper.DialogHelper$ResultListener -> com.nolanlawson.keepscore.a.e:
    void onResult(java.lang.Object) -> a
com.nolanlawson.keepscore.helper.PlayerTextFormat -> com.nolanlawson.keepscore.a.b:
    com.nolanlawson.keepscore.helper.PlayerTextFormat TwoToFourPlayers -> a
    com.nolanlawson.keepscore.helper.PlayerTextFormat FiveToSixPlayers -> b
    com.nolanlawson.keepscore.helper.PlayerTextFormat SevenToEightPlayers -> c
    int playerScoreTextSize -> d
    int plusMinusTextSize -> e
    int playerNameTextSize -> f
    int badgeTextSize -> g
    int badgePaddingLeftRight -> h
    int badgePaddingTopBottom -> i
    int badgeOffset -> j
    float plusMinusButtonMargin -> k
    com.nolanlawson.keepscore.helper.PlayerTextFormat[] ENUM$VALUES -> l
    int getPlayerScoreTextSize() -> a
    int getPlusMinusTextSize() -> b
    int getPlayerNameTextSize() -> c
    int getBadgeTextSize() -> d
    float getPlusMinusButtonMargin() -> e
    int getBadgePaddingLeftRight() -> f
    int getBadgePaddingTopBottom() -> g
    int getBadgeOffset() -> h
    com.nolanlawson.keepscore.helper.PlayerTextFormat forNumPlayers(int) -> a
    com.nolanlawson.keepscore.helper.PlayerTextFormat[] values() -> values
    com.nolanlawson.keepscore.helper.PlayerTextFormat valueOf(java.lang.String) -> valueOf
com.nolanlawson.keepscore.helper.PreferenceHelper -> com.nolanlawson.keepscore.a.d:
    int cachedUpdateDelay -> a
    com.nolanlawson.keepscore.helper.ColorScheme cachedColorScheme -> b
    void resetCache() -> a
    int getPopupDeltaButtonValue(int,android.content.Context) -> a
    int getTwoPlayerDeltaButtonValue(int,android.content.Context) -> b
    com.nolanlawson.keepscore.helper.ColorScheme getColorScheme(android.content.Context) -> a
    int getUpdateDelay(android.content.Context) -> b
    void setBooleanPreference$21f5c52d(android.content.Context) -> c
    void setStringPreference$21f5c52d(android.content.Context) -> d
    void setIntPreference(int,int,android.content.Context) -> a
    int getIntPreference(int,int,android.content.Context) -> b
    boolean getBooleanPreference$21f5c529(android.content.Context) -> e
com.nolanlawson.keepscore.util.CollectionUtil -> com.nolanlawson.keepscore.c.e:
    java.lang.Comparable maxValue$2d6207d9(java.util.List,com.nolanlawson.keepscore.util.CollectionUtil$Function) -> a
    java.util.List stringsToInts(java.util.List) -> a
    java.util.List reversedCopy(java.util.List) -> b
    java.util.List transform(java.util.List,com.nolanlawson.keepscore.util.CollectionUtil$Function) -> b
com.nolanlawson.keepscore.util.CollectionUtil$Function -> com.nolanlawson.keepscore.c.b:
    java.lang.Object apply(java.lang.Object) -> a
com.nolanlawson.keepscore.util.IntegerUtil -> com.nolanlawson.keepscore.c.d:
    java.lang.String toStringWithSign(int) -> a
    boolean validInt(java.lang.CharSequence) -> a
com.nolanlawson.keepscore.util.StringUtil -> com.nolanlawson.keepscore.c.c:
    boolean isEmptyOrWhitespace(java.lang.String) -> a
    java.util.List split$41012029(java.lang.String) -> b
    java.lang.CharSequence joinSpannables(java.lang.String,java.lang.CharSequence[]) -> a
    java.lang.String nullToEmpty(java.lang.CharSequence) -> a
    java.lang.String padLeft$2c8fd6db(java.lang.String,int) -> a
com.nolanlawson.keepscore.util.UtilLogger -> com.nolanlawson.keepscore.c.a:
    java.lang.String tag -> a
com.nolanlawson.keepscore.widget.AutofitTextView -> com.nolanlawson.keepscore.widget.AutofitTextView:
    com.nolanlawson.keepscore.util.UtilLogger log -> a
    void onMeasure(int,int) -> onMeasure
com.nolanlawson.keepscore.widget.IntegerEditTextPreference -> com.nolanlawson.keepscore.widget.IntegerEditTextPreference:
    void setUpEditText() -> a
com.nolanlawson.keepscore.widget.NonnegativeIntegerEditTextPreference -> com.nolanlawson.keepscore.widget.NonnegativeIntegerEditTextPreference:
    void setUpEditText() -> a
com.nolanlawson.keepscore.widget.PlayerView -> com.nolanlawson.keepscore.widget.PlayerView:
    com.nolanlawson.keepscore.util.UtilLogger log -> a
    com.nolanlawson.keepscore.db.PlayerScore playerScore -> b
    java.util.concurrent.atomic.AtomicBoolean shouldAutosave -> c
    int positiveTextColor -> d
    int negativeTextColor -> e
    android.view.View view -> f
    android.view.View divider1 -> g
    android.view.View divider2 -> h
    android.widget.TextView nameTextView -> i
    android.widget.TextView scoreTextView -> j
    android.widget.TextView historyTextView -> k
    android.widget.TextView badgeTextView -> l
    android.widget.LinearLayout badgeLinearLayout -> m
    android.widget.Button minusButton -> n
    android.widget.Button plusButton -> o
    android.widget.Button deltaButton1 -> p
    android.widget.Button deltaButton2 -> q
    android.widget.Button deltaButton3 -> r
    android.widget.Button deltaButton4 -> s
    java.util.List plusMinusButtonMargins -> t
    android.content.Context context -> u
    android.os.Handler handler -> v
    java.util.concurrent.atomic.AtomicLong lastIncremented -> w
    com.nolanlawson.keepscore.widget.PlayerView$HistoryUpdateRunnable historyUpdateRunnable -> x
    java.lang.Object lock -> y
    boolean animationRunning -> z
    android.widget.TextView getNameTextView() -> a
    android.widget.TextView getBadgeTextView() -> b
    android.widget.LinearLayout getBadgeLinearLayout() -> c
    android.widget.TextView getScoreTextView() -> d
    android.widget.Button getMinusButton() -> e
    android.widget.Button getPlusButton() -> f
    java.util.concurrent.atomic.AtomicBoolean getShouldAutosave() -> g
    void setPositiveTextColor(int) -> a
    void setNegativeTextColor(int) -> b
    android.view.View getDivider1() -> h
    android.view.View getDivider2() -> i
    android.widget.Button getDeltaButton1() -> j
    android.widget.Button getDeltaButton2() -> k
    android.widget.Button getDeltaButton3() -> l
    android.widget.Button getDeltaButton4() -> m
    java.util.List getPlusMinusButtonMargins() -> n
    void onClick(android.view.View) -> onClick
    void increment(int) -> c
    void updateViews() -> o
    boolean onLongClick(android.view.View) -> onLongClick
    void showAdditionalDeltasPopup(boolean) -> a
    void reset(android.content.Context) -> a
    void confirmHistory() -> p
    void cancelPendingUpdates() -> q
    long getUpdateDelayInMs() -> r
    com.nolanlawson.keepscore.widget.PlayerView$HistoryUpdateRunnable getHistoryUpdateRunnable() -> s
    java.util.concurrent.atomic.AtomicLong access$0(com.nolanlawson.keepscore.widget.PlayerView) -> a
    long access$1(com.nolanlawson.keepscore.widget.PlayerView) -> b
    com.nolanlawson.keepscore.db.PlayerScore access$2(com.nolanlawson.keepscore.widget.PlayerView) -> c
    android.widget.TextView access$3(com.nolanlawson.keepscore.widget.PlayerView) -> d
    java.lang.Object access$4(com.nolanlawson.keepscore.widget.PlayerView) -> e
    android.widget.TextView access$5(com.nolanlawson.keepscore.widget.PlayerView) -> f
    void access$6$e4c383e(com.nolanlawson.keepscore.widget.PlayerView) -> g
    int access$7(com.nolanlawson.keepscore.widget.PlayerView) -> h
    int access$8(com.nolanlawson.keepscore.widget.PlayerView) -> i
    android.content.Context access$9(com.nolanlawson.keepscore.widget.PlayerView) -> j
    void access$11(com.nolanlawson.keepscore.widget.PlayerView) -> k
    void access$12(com.nolanlawson.keepscore.widget.PlayerView) -> l
    java.util.concurrent.atomic.AtomicBoolean access$13(com.nolanlawson.keepscore.widget.PlayerView) -> m
    void access$14(com.nolanlawson.keepscore.widget.PlayerView,int) -> a
com.nolanlawson.keepscore.widget.PlayerView$1 -> com.nolanlawson.keepscore.widget.h:
    com.nolanlawson.keepscore.widget.PlayerView this$0 -> a
    android.text.Spannable val$newHistoryTextViewValue -> b
    void run() -> run
com.nolanlawson.keepscore.widget.PlayerView$2 -> com.nolanlawson.keepscore.widget.f:
    com.nolanlawson.keepscore.widget.PlayerView this$0 -> a
    java.lang.Runnable val$onAnimationComplete -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.nolanlawson.keepscore.widget.PlayerView$3 -> com.nolanlawson.keepscore.widget.g:
    com.nolanlawson.keepscore.widget.PlayerView this$0 -> a
    java.lang.Object apply(java.lang.Object) -> a
com.nolanlawson.keepscore.widget.PlayerView$4 -> com.nolanlawson.keepscore.widget.d:
    com.nolanlawson.keepscore.widget.PlayerView this$0 -> a
    int val$maxChars -> b
    java.lang.Object apply(java.lang.Object) -> a
com.nolanlawson.keepscore.widget.PlayerView$5 -> com.nolanlawson.keepscore.widget.e:
    com.nolanlawson.keepscore.widget.PlayerView this$0 -> a
    java.util.List val$items -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.widget.PlayerView$6 -> com.nolanlawson.keepscore.widget.b:
    com.nolanlawson.keepscore.widget.PlayerView this$0 -> a
    android.widget.EditText val$editText -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.nolanlawson.keepscore.widget.PlayerView$7 -> com.nolanlawson.keepscore.widget.c:
    com.nolanlawson.keepscore.widget.PlayerView this$0 -> a
    void onResult(java.lang.Object) -> a
com.nolanlawson.keepscore.widget.PlayerView$HistoryUpdateRunnable -> com.nolanlawson.keepscore.widget.a:
    boolean canceled -> a
    com.nolanlawson.keepscore.widget.PlayerView this$0 -> b
    void run() -> run
    void setCanceled$1385ff() -> a
